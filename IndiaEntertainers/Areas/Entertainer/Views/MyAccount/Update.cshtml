@model IndiaEntertainers.Models.tbl_Entertainer

@{
    ViewBag.Title = "Update";
}

<div class="row">
    <div class="container">
        <h2 class="text-info h2 page-header">Update Profile</h2>

        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="clearfix"></div><br />
                @Html.HiddenFor(m => m.EntrId)
                @Html.HiddenFor(m => m.UserId)
                @Html.HiddenFor(m => m.ExpiryDate)
                @Html.HiddenFor(m => m.RegDate)
                @Html.HiddenFor(m => m.IsActive)
                @Html.HiddenFor(m => m.IsPremium)
                @Html.HiddenFor(m => m.Star)

                <h3 class="text-info h3"> Personal Info.</h3>
                <div class="form-group col-md-6">
                    @Html.LabelFor(model => model.FName, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-9">
                        @Html.EditorFor(model => model.FName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.FName, "", new { @class = "text-danger" })
                    </div>
                </div>

                @*<div class="form-group col-md-6">
                    @Html.LabelFor(model => model.MName, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-9">
                        @Html.EditorFor(model => model.MName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.MName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group col-md-6">
                    @Html.LabelFor(model => model.LName, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-9">
                        @Html.EditorFor(model => model.LName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.LName, "", new { @class = "text-danger" })
                    </div>
                </div>*@

                <div class="form-group col-md-6">
                    @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-9">
                        @IndiaEntertainers.HTMLHelper.CustomHelper.GenderDropDownList("Gender", "form-control", null, Model.Gender,false)
                        @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group col-md-6">
                    @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-9">
                        @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group col-md-6">
                    @Html.LabelFor(model => model.Mobile, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-9">
                        @Html.EditorFor(model => model.Mobile, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Mobile, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="clearfix"></div><br /><hr />
                <h3 class="text-info h3"> Contact Person Info.</h3>

                <div class="form-group col-md-6">
                    @Html.LabelFor(model => model.ContactPerson, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-9">
                        @Html.EditorFor(model => model.ContactPerson, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ContactPerson, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group col-md-6">
                    @Html.LabelFor(model => model.CPContNo, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-9">
                        @Html.EditorFor(model => model.CPContNo, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.CPContNo, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group col-md-6">
                    @Html.LabelFor(model => model.CPEmail, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-9">
                        @Html.EditorFor(model => model.CPEmail, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.CPEmail, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group col-md-6">
                    @Html.LabelFor(model => model.OfficeNo, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-9">
                        @Html.EditorFor(model => model.OfficeNo, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.OfficeNo, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="clearfix"></div><br /><hr />
                <h3 class="text-info h3"> Contact and Other Info.</h3>

                <div class="form-group col-md-6">
                    @Html.LabelFor(model => model.Type, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-9">
                        @IndiaEntertainers.HTMLHelper.CustomHelper.TypeDropDownList("Type", "form-control", "Type", null)
                        @Html.ValidationMessageFor(model => model.Type, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group col-md-6">
                    @Html.LabelFor(model => model.Members, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-9">
                        @Html.EditorFor(model => model.Members, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Members, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group col-md-6">
                    @Html.LabelFor(model => model.StateId, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-9">
                        @IndiaEntertainers.HTMLHelper.CustomHelper.StateDropDownList("StateId", "form-control", "StateId", (Model.StateId).ToString())
                        @Html.ValidationMessageFor(model => model.StateId, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group col-md-6">
                    @Html.LabelFor(model => model.CityId, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-9">
                        @*<select name="CityId" id="CityId" class="form-control">  </select>*@
                            @IndiaEntertainers.HTMLHelper.CustomHelper.CityDropDownList("CityId", "form-control", "CityId", (Model.CityId).ToString(),false)
                      
                        @Html.ValidationMessageFor(model => model.CityId, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group col-md-6">
                    @Html.LabelFor(model => model.PostalCode, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-9">
                        @Html.EditorFor(model => model.PostalCode, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.PostalCode, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group col-md-6">
                    @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-9">
                        @Html.TextAreaFor(model => model.Address, 4, 40, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="clearfix"></div><br /><hr />
                <div class="form-group">
                    <div class="col-md-offset-2 col-md-9">
                        <input type="submit" value="Save" class="btn btn-info" />
                        @Html.ActionLink("Cancel", "Index", "Home", new { area = "" }, htmlAttributes: new { @class = "btn btn-danger" })
                    </div>
                </div>
            </div>
        }

    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/jqueryui")
    @Styles.Render("~/Content/cssjqryUi")
    <script src="~/Scripts/postify.js"></script>
    <script>
            $(document).ready(function () {

                $('#DOB').datepicker({
                    dateFormat: "dd/M/yy",
                    changeMonth: true,
                    changeYear: true,
                    yearRange: "-60:+0"
                });

                $("#StateId").on("change", function () {
                    $("#StateId option[value='']").remove();
                    var sId = $("#StateId").val();
                    var url = "/CustomHLPR/GetCities";
                    // call for Chapters list via Books
                    $.getJSON(url, { StateId: sId }, function (citieslist) {
                        var clist = $("#CityId");
                        clist.empty();
                        $(clist).append($("<option />", { value: "", text: "--Select City--" }));
                        $.each(citieslist, function (index, item) {
                            $(clist).append($("<option />", { value: this.Value, text: this.Text }));
                        });
                    });
                });
            });
    </script>

}


