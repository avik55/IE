@model IndiaEntertainers.Models.tbl_Entertainer

@{
    ViewBag.Title = "Create Profile";
}

<div class="row">
    <div class="container">
        <h2 class="text-info h2 page-header">My Profile</h2>

        @using (Html.BeginForm("Create", "MyAccount", FormMethod.Post, new { @enctype = "multipart/form-data" }))
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                <div class="clearfix"></div><br />
                <h3 class="text-info h3"> Personal Info.</h3>

                <div class="form-group col-md-6">
                    @Html.LabelFor(model => model.FName, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.FName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.FName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group col-md-6">
                    @Html.LabelFor(model => model.YearsOfPerforming, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.YearsOfPerforming, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.YearsOfPerforming, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group col-md-6">
                    @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @IndiaEntertainers.HTMLHelper.CustomHelper.GenderDropDownList("Gender", "form-control", null, null,false)
                        @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group col-md-6">
                    @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                    </div>
                </div>


                <div class="form-group col-md-6">
                    @Html.LabelFor(model => model.Mobile, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.Mobile, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Mobile, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group col-md-6">
                    @Html.LabelFor(model => model.Nationality, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.Nationality, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Nationality, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="clearfix"></div>
                <div class="form-group col-md-6">
                    <label class="control-label col-md-4">Select Profile Photo</label>
                    <div class="col-md-8">
                        <img src="" style="margin-top:-14px;" alt="" id="proimgprvw" height="200" width="200" />
                        <input type="file" name="profileimg" class="form-control"  required id="profileimg" onchange="showimagepreview(this)">
                        @Html.ValidationMessage("profileimg", "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group col-md-6">
                    <label class="control-label col-md-4">Select Cover Photo</label>
                    <div class="col-md-8">
                        <img src="" style="margin-top:-14px;" alt="" id="coverimgprvw" height="200" width="300" />
                        <input type="file" name="coverimg" class="form-control"  id="coverImage" onchange="showcoverimagepreview(this)">
                        @Html.ValidationMessage("coverimg", "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="clearfix"></div>
                <h3 class="text-info h3"> Profile Info.</h3>
                <div class="form-group">
                    @Html.LabelFor(model => model.Profile, htmlAttributes: new { @class = "control-label col-lg-2" })
                    <div class="col-lg-9">
                        @Html.TextAreaFor(model => model.Profile,5,50, htmlAttributes : new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Profile, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="clearfix"></div>

                <div class="form-group col-md-6">
                    <label class="control-label col-md-4">Select Category</label>
                    <div class="col-md-8">
                        @IndiaEntertainers.HTMLHelper.CustomHelper.CategoryDropDownList("maincatid", "form-control", "maincatid", null,false)
                        @Html.ValidationMessageFor(model => model.Type, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group col-md-6">
                    @Html.LabelFor(model => model.ProfileTitle, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.ProfileTitle, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ProfileTitle, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group col-md-6">
                    @Html.LabelFor(model => model.Performancefee, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.Performancefee, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Performancefee, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group col-md-6">
                    @Html.LabelFor(model => model.Showfee, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                            @Html.CheckBoxFor(model => model.Showfee)
                            @Html.ValidationMessageFor(model => model.Showfee, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="clearfix"></div>
                <div class="form-group col-md-6">
                    @Html.LabelFor(model => model.NoofShow, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.NoofShow, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.NoofShow, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group col-md-6">
                    @Html.LabelFor(model => model.PerfLanguage, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.PerfLanguage, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.PerfLanguage, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group col-md-6">
                    @Html.LabelFor(model => model.PerfLength, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.PerfLength, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.PerfLength, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group col-md-6">
                    @Html.LabelFor(model => model.PERFORMINGMEMBERS, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.PERFORMINGMEMBERS, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.PERFORMINGMEMBERS, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group col-md-6">
                    @Html.LabelFor(model => model.FBPageLink, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.FBPageLink, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.FBPageLink, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group col-md-6">
                    @Html.LabelFor(model => model.TwiterPageLink, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.TwiterPageLink, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.TwiterPageLink, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group col-md-6">
                    @Html.LabelFor(model => model.IntgramPageLink, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.IntgramPageLink, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.IntgramPageLink, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="clearfix"></div><br /><hr />
                <h3 class="text-info h3"> Contact Person Info.</h3>

                <div class="form-group col-md-6">
                    @Html.LabelFor(model => model.ContactPerson, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.ContactPerson, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ContactPerson, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group col-md-6">
                    @Html.LabelFor(model => model.CPContNo, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.CPContNo, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.CPContNo, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group col-md-6">
                    @Html.LabelFor(model => model.CPEmail, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.CPEmail, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.CPEmail, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group col-md-6">
                    @Html.LabelFor(model => model.OfficeNo, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.OfficeNo, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.OfficeNo, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="clearfix"></div><br /><hr />
                <h3 class="text-info h3"> Contact and Other Info.</h3>

                <div class="form-group col-md-6">
                    @Html.LabelFor(model => model.Type, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @IndiaEntertainers.HTMLHelper.CustomHelper.TypeDropDownList("Type", "form-control", "Type", null)
                        @Html.ValidationMessageFor(model => model.Type, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group col-md-6">
                    @Html.LabelFor(model => model.Members, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.Members, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Members, "", new { @class = "text-danger" })
                    </div>
                </div>

                <input type="hidden" name="Star" value="1" />

                <div class="form-group col-md-6">
                    @Html.LabelFor(model => model.StateId, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @IndiaEntertainers.HTMLHelper.CustomHelper.StateDropDownList("StateId", "form-control", "StateId",null)
                        @Html.ValidationMessageFor(model => model.StateId, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group col-md-6">
                    @Html.LabelFor(model => model.CityId, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        <select name="CityId" id="CityId" class="form-control" required> </select>
                        @Html.ValidationMessageFor(model => model.CityId, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group col-md-6">
                    @Html.LabelFor(model => model.PostalCode, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.PostalCode, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.PostalCode, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group col-md-6">
                    @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.TextAreaFor(model => model.Address, 4, 40, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                    </div>
                </div>

                <input type="hidden" name="UserId" value="@ViewBag.uid" />

                <div class="clearfix"></div><br /><hr />
                <div class="form-group">
                    <div class="col-md-offset-2 col-md-8">
                        <input type="submit" value="Save" class="btn btn-info" />
                        @Html.ActionLink("Cancel", "Index", "Home", new { area = "" }, htmlAttributes: new { @class = "btn btn-danger" })
                    </div>
                </div>
            </div>
        }
    </div>
</div>


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/jqueryui")
    @Styles.Render("~/Content/cssjqryUi")
    <script src="~/Scripts/postify.js"></script>
    <script>
        function showimagepreview(input) {
            if (input.files && input.files[0]) {
                var filerdr = new FileReader();
                filerdr.onload = function (e) {
                    $('#proimgprvw').attr('src', e.target.result);
                }
                filerdr.readAsDataURL(input.files[0]);
            }
        }

        function showcoverimagepreview(input) {
            if (input.files && input.files[0]) {
                var filerdr = new FileReader();
                filerdr.onload = function (e) {
                    $('#coverimgprvw').attr('src', e.target.result);
                }
                filerdr.readAsDataURL(input.files[0]);
            }
        }

        $(document).ready(function () {

            $('#DOB').datepicker({
                dateFormat: "dd/M/yy",
                changeMonth: true,
                changeYear: true,
                yearRange: "-60:+0"
            });

            $("#StateId").on("change", function () {
                $("#StateId option[value='']").remove();
                var sId = $("#StateId").val();
                var url = "/CustomHLPR/GetCities";
                // call for Chapters list via Books
                $.getJSON(url, { StateId: sId }, function (citieslist) {
                    var clist = $("#CityId");
                    clist.empty();
                    $(clist).append($("<option />", { value: "", text: "--Select City--" }));
                    $.each(citieslist, function (index, item) {
                        $(clist).append($("<option />", { value: this.Value, text: this.Text }));
                    });
                });
            });
        });
    </script>

}

    }
